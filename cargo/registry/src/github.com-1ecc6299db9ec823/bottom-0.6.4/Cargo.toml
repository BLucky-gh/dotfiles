# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "bottom"
version = "0.6.4"
authors = ["Clement Tsang <cjhtsang@uwaterloo.ca>"]
build = "build.rs"
default-run = "btm"
description = "A cross-platform graphical process/system monitor with a customizable interface and a multitude of features. Supports Linux, macOS, and Windows."
readme = "README.md"
keywords = ["cross-platform", "monitoring", "cli", "top", "tui"]
categories = ["command-line-utilities", "visualization"]
license = "MIT"
repository = "https://github.com/ClementTsang/bottom"
[package.metadata.deb]
assets = [["target/release/btm", "usr/bin/", "755"], ["LICENSE", "usr/share/doc/btm/", "644"], ["completion/btm.bash", "usr/share/bash-completion/completions/btm", "644"], ["completion/btm.fish", "usr/share/fish/vendor_completions.d/btm.fish", "644"], ["completion/_btm", "usr/share/zsh/vendor-completions/", "644"]]
extended-description = "A cross-platform graphical process/system monitor with a customizable interface and a multitude of\nfeatures. Supports Linux, macOS, and Windows.\n\nBy default, bottom will look for a config file in ~/.config/bottom/bottom.toml.\nIf one is not specified it will fall back to defaults.  If a config file does not\nexist at the specified or default location, a blank one will be created for the user.\n"
section = "utility"

[package.metadata.wix]
output = "bottom_x86_64_installer.msi"
[profile.release]
opt-level = 3
lto = true
codegen-units = 1
debug = 0

[lib]
test = false
doctest = false
doc = false

[[bin]]
name = "btm"
path = "src/bin/main.rs"
doc = false
[dependencies.anyhow]
version = "1.0.40"

[dependencies.backtrace]
version = "0.3.59"

[dependencies.battery]
version = "0.7.8"
optional = true

[dependencies.cfg-if]
version = "1.0"

[dependencies.chrono]
version = "0.4.19"

[dependencies.clap]
version = "2.33"

[dependencies.crossterm]
version = "0.18.2"

[dependencies.ctrlc]
version = "3.1.9"
features = ["termination"]

[dependencies.dirs]
version = "3.0.2"

[dependencies.fern]
version = "0.6.0"
optional = true

[dependencies.futures]
version = "0.3.14"

[dependencies.futures-timer]
version = "3.0.2"

[dependencies.fxhash]
version = "0.2.1"

[dependencies.indexmap]
version = "1.6.2"

[dependencies.itertools]
version = "0.10.0"

[dependencies.log]
version = "0.4.14"
optional = true

[dependencies.once_cell]
version = "1.5.2"

[dependencies.regex]
version = "1.5.4"

[dependencies.serde]
version = "1.0.125"
features = ["derive"]

[dependencies.sysinfo]
version = "0.18.2"

[dependencies.thiserror]
version = "1.0.24"

[dependencies.toml]
version = "0.5.8"

[dependencies.tui]
version = "0.14.0"
features = ["crossterm"]
default-features = false

[dependencies.typed-builder]
version = "0.9.0"

[dependencies.unicode-segmentation]
version = "1.7.1"

[dependencies.unicode-width]
version = "0.1"
[dev-dependencies.assert_cmd]
version = "1.0.3"

[dev-dependencies.cargo-husky]
version = "1"
features = ["user-hooks"]
default-features = false

[dev-dependencies.predicates]
version = "1.0.8"
[build-dependencies.clap]
version = "2.33"

[features]
default = ["fern", "log", "battery"]
[target."cfg(target_os = \"linux\")".dependencies.heim]
version = "0.1.0-rc.1"
features = ["cpu", "disk", "net", "sensors"]

[target."cfg(target_os = \"linux\")".dependencies.procfs]
version = "0.10.1"

[target."cfg(target_os = \"linux\")".dependencies.smol]
version = "1.2.5"
[target."cfg(target_os = \"macos\")".dependencies.heim]
version = "0.1.0-rc.1"
features = ["cpu", "disk", "memory", "net"]
[target."cfg(target_os = \"windows\")".dependencies.heim]
version = "0.1.0-rc.1"
features = ["cpu", "disk", "memory"]

[target."cfg(target_os = \"windows\")".dependencies.winapi]
version = "0.3.9"
[target."cfg(unix)".dependencies.libc]
version = "0.2.86"
